{"version":3,"sources":["components/Creator.jsx","components/Card.jsx","components/Header.jsx","App.js","index.js"],"names":["Columns","styled","div","Column","Title","h2","Label","label","Input","input","ColorInput","TestLink","Textarea","textarea","Test","props","color","textColor","Creator","useState","username","setUsername","repo","setRepo","setColor","setTextColor","value","type","placeholder","onChange","e","target","htmlFor","id","slice","to","readOnly","UserInfo","Main","param","Buttons","Additional","Avatar","img","UserName","h1","Repo","Header3","h3","Block","HR","OList","ol","Card","avatar","setAvatar","name","setName","contributors","setContr","state","useParams","arr","search","split","ob","indexOf","getParam","useLocation","fetchData","a","fetch","data","ok","json","responce","avatar_url","login","then","res","repos","filter","contributors_url","contr","map","item","useEffect","src","href","rel","stargazers_count","description","toString","Nav","MainTitle","Header","Wrapper","App","exact","path","component","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.1f4e1e6d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Columns = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Column = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 45%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    margin: 10px 0;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    display: inline-block;\r\n    margin: 10px 0;\r\n    width: 200px;\r\n    outline: none;\r\n    \r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 250px;\r\n    padding: 5px;\r\n    margin: 10px 10px 10px 0;\r\n    outline: none;\r\n    border: 1px solid #ced4da;\r\n    &:focus {\r\n        box-shadow: 0 0 3px 1px #73ade8;\r\n    }\r\n`;\r\n\r\nconst ColorInput = styled.input`\r\n    width: 50px;\r\n    margin: 10px 10px 10px 0;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TestLink = styled.div`\r\n    padding: 5px;\r\n    width: 70px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    a {\r\n        text-decoration: none;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n    resize: none;\r\n    width: 400px;\r\n    height: 50px;\r\n    padding: 5px;\r\n    margin: 10px 10px 10px 0;\r\n    outline: none;\r\n`;\r\n\r\nconst Test = styled.div`\r\n    width: 400px;\r\n    height: 200px;\r\n    background: ${props => props.color};\r\n    color: ${props => props.textColor};\r\n    padding: 10px;\r\n    margin: 10px 10px 10px 0;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 3px 2px #ccc;\r\n`;\r\n\r\nconst Creator = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [repo, setRepo] = useState('');\r\n    const [color, setColor] = useState('5ed5f3');\r\n    const [textColor, setTextColor] = useState('ffffff');\r\n    const value = `https://bohdanomelianec.github.io/superchat-frontend-challenge/link/${username || 'user'}/${repo || 'repo'}/?c=${color}&tc=${textColor}`;\r\n\r\n    return (\r\n        <div>\r\n            <Title>Link creator</Title>\r\n            <Input\r\n                type='text'\r\n                placeholder=':username'\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)} />\r\n            <Input\r\n                placeholder=':repository'\r\n                value={repo}\r\n                onChange={(e) => setRepo(e.target.value)} />\r\n            <hr />\r\n            <Columns>\r\n                <Column>\r\n                    <Title>Link options</Title>\r\n                    <div>\r\n                        <Label htmlFor='color'>Set background color:</Label>\r\n                        <ColorInput id=\"color\" type=\"color\" value={'#' + color} onChange={(e) => setColor(e.target.value.slice(1))} />\r\n                    </div>\r\n                    <div>\r\n                        <Label htmlFor='textcolor'>Set text color:</Label>\r\n                        <ColorInput id=\"textcolor\" type=\"color\" value={'#' + textColor} onChange={(e) => setTextColor(e.target.value.slice(1))} />\r\n                    </div>\r\n                </Column>\r\n                <Column>\r\n                    <Title>Preview</Title>\r\n                    <TestLink><Link to={`/superchat-frontend-challenge/link/${username || 'user'}/${repo|| 'repo'}/?c=${color}&tc=${textColor}`} >Test link</Link></TestLink>\r\n                    <Textarea\r\n                        value={value}\r\n                        readOnly />\r\n                    <Test color={'#' + color} textColor={'#' + textColor}>\r\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Possimus nobis quia consectetur quibusdam repudiandae non eius neque facilis, libero odit numquam impedit eaque quaerat totam accusamus quae veniam praesentium voluptate.\r\n                    </Test>\r\n                </Column>\r\n            </Columns>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Creator;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nconst UserInfo = styled.div`\r\n    position: relative;\r\n    width: 80%;\r\n    margin: 20px auto;\r\n    background: #f3f3f3;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 5px 5px #f2f2f2;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    padding: 20px 60px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: ${props => '#' + props.param.color};\r\n    color: ${props => '#' + props.param.textColor};\r\n    border-radius: 10px 10px 200px 200px;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n    \r\n    button {\r\n        position: absolute;\r\n        top: 30px;\r\n        right: 30px;\r\n        padding: 8px 15px;\r\n        background: transparent;\r\n        color: white;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        border: 1px solid #fff;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        :hover {\r\n            box-shadow: 0px 0px 3px 1px #fff;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Additional = styled.div`\r\n    padding: 20px 60px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: strech;\r\n    background: ${props => '#' + props.param.color};\r\n    border-radius: 150px 150px 10px 10px;\r\n    color: ${props => '#' + props.param.textColor};\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n    background: #ccc;\r\n`;\r\n\r\nconst UserName = styled.h1`\r\n    margin: 20px 60px;\r\n`;\r\nconst Repo = styled.h2`\r\n    margin: 20px auto;\r\n`;\r\nconst Header3 = styled.h3`\r\n    margin: 20px auto;\r\n`;\r\n\r\nconst Block = styled.div`\r\n    width: 45%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst HR = styled.div`\r\n    width: 1px;\r\n    height: auto;\r\n    background: #fff;\r\n`;\r\n\r\nconst OList = styled.ol`\r\n    li {\r\n        margin: 10px;\r\n    }\r\n`;\r\n\r\nconst Card = () => {\r\n    const [avatar, setAvatar] = useState();\r\n    const [name, setName] = useState('Unknown');\r\n    const [repo, setRepo] = useState({});\r\n    const [contributors, setContr] = useState([]);\r\n    const state = useParams();\r\n    const location = useLocation();\r\n    const param = getParam(location);\r\n\r\nfunction getParam(name) {\r\n    var s = name.search;\r\n    let arr = s.slice(1).split('&');\r\n    let ob = {}\r\n    \r\n    ob.color = arr[0].slice(arr[0].indexOf('=') + 1)\r\n    ob.textColor = arr[1].slice(arr[1].indexOf('=') + 1)\r\n    return ob\r\n}\r\n\r\nconst fetchData = async () => {\r\n    const data = await fetch(`https://api.github.com/users/${state.name}`)\r\n\r\n    if(data.ok) {\r\n        const responce = await data.json();\r\n        setAvatar(responce.avatar_url)\r\n        setName(responce.login)\r\n    \r\n        fetch(`https://api.github.com/users/${state.name}/repos`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            const repos = res.filter(repo => repo.name === state.repo)\r\n            setRepo(...repos)\r\n            return repos\r\n        })\r\n        .then(repo => {\r\n            fetch(repo[0]?.contributors_url)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                const contr = res.map(item => item.login);\r\n                setContr(contr)\r\n            }) \r\n        });\r\n    }\r\n}\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <UserInfo >\r\n            <Main param={param}>\r\n                <Avatar src={avatar}/>\r\n                <UserName>{name}</UserName>\r\n            </Main>\r\n            <Buttons>\r\n                <a href={`https://github.com/${name}/${repo?.name}/stargazers`} target='_blank' rel='noreferrer'>\r\n                    <button>Star {repo ? repo.stargazers_count : '?'}</button>\r\n                </a>\r\n            </Buttons>\r\n            \r\n            <Repo>{repo ? repo.name : 'Your repository'}</Repo>\r\n            <Additional param={param}>\r\n                <Block>\r\n                    <Header3>Short description</Header3>\r\n                    <p>{repo ? repo.description : 'No description'}</p>\r\n                </Block>\r\n                <HR />\r\n                <Block>\r\n                    <Header3>Top contributors</Header3>\r\n                    <OList>\r\n                    {\r\n                        contributors.map(item => <li key={item.toString()}>{item}</li>)\r\n                    }\r\n                    </OList>\r\n                </Block> \r\n            </Additional>\r\n        </UserInfo>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.div`\r\n    padding: 20px 0;\r\n    font-size: 22px;\r\n    color: #000;\r\n    text-decoration: none;\r\n`;\r\nconst MainTitle = styled.h2`\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;  \r\n    }\r\n    \r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Nav>\r\n           <MainTitle ><Link to='/superchat-frontend-challenge'>Crazy github links</Link></MainTitle> \r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\nimport Creator from \"./components/Creator\";\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport styled from 'styled-components';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <Wrapper>\n        <Header />\n      </Wrapper>\n      <hr/>\n      <Wrapper>\n        <Route exact path='/superchat-frontend-challenge' component={Creator}/>\n        <Route exact path='/superchat-frontend-challenge/link/:name/:repo' component={Card} />\n        \n        \n      </Wrapper>\n      \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createGlobalStyle} from 'styled-components';\n\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  }\n  body {\n    background: #e6e6e6;\n  }\n`;\n\n\n\nReactDOM.render(\n  <React.Fragment>\n    <GlobalStyle />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}